var _a;
import StyleType from '../embedded-types/style-type';
import { sanitizeHTML } from '../helper/sanitize';
export var defaultOptions = (_a = {},
    _a[StyleType.BLOCK] = function (item) {
        var title = sanitizeHTML(item.title || item.uid);
        var content_type_uid = sanitizeHTML(item._content_type_uid || (item.system ? item.system.content_type_uid : ''));
        return "<div><p>".concat(title, "</p><p>Content type: <span>").concat(content_type_uid, "</span></p></div>");
    },
    _a[StyleType.INLINE] = function (item) {
        var title = sanitizeHTML(item.title || item.uid);
        return "<span>".concat(title, "</span>");
    },
    _a[StyleType.LINK] = function (item, metadata) {
        var url = encodeURI(sanitizeHTML(item.url || 'undefined'));
        var text = sanitizeHTML(metadata.text || item.title || item.uid || (item.system ? item.system.uid : ''));
        return "<a href=\"".concat(url, "\">").concat(text, "</a>");
    },
    _a[StyleType.DISPLAY] = function (item, metadata) {
        var url = encodeURI(sanitizeHTML(item.url || 'undefined'));
        var alt = sanitizeHTML(metadata.attributes.alt || item.title || item.filename || item.uid
            || (item.system ? item.system.uid : ''));
        return "<img src=\"".concat(url, "\" alt=\"").concat(alt, "\" />");
    },
    _a[StyleType.DOWNLOAD] = function (item, metadata) {
        var href = encodeURI(sanitizeHTML(item.url || 'undefined'));
        var text = sanitizeHTML(metadata.text || item.title || item.uid || (item.system ? item.system.content_type_uid : ''));
        return "<a href=\"".concat(href, "\">").concat(text, "</a>");
    },
    _a);
//# sourceMappingURL=default-options.js.map